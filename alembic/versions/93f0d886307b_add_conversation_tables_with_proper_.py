"""Add conversation tables with proper SQLAlchemy models

Revision ID: 93f0d886307b
Revises: 053199a23dec
Create Date: 2025-08-11 13:45:30.995726

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '93f0d886307b'
down_revision: Union[str, None] = '053199a23dec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'conversations',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('conversation_id', sa.String(length=255), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=500), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('language', sa.String(length=10), nullable=False),
        sa.Column('domain', sa.String(length=100), nullable=False),
        sa.Column('total_turns', sa.Integer(), nullable=False),
        sa.Column('max_turns', sa.Integer(), nullable=False),
        sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('conversation_metadata', sa.JSON(), nullable=False),
        sa.Column('user_preferences', sa.JSON(), nullable=False),
        sa.Column('session_metadata', sa.JSON(), nullable=False),
        sa.Column('financial_context', sa.JSON(), nullable=False, server_default=sa.text("'{}'")),
        sa.Column('user_preferences_ai', sa.JSON(), nullable=False, server_default=sa.text("'{}'")),
        sa.Column('key_entities_history', sa.JSON(), nullable=True, server_default=sa.text("'[]'")),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversations_conversation_id'), ['conversation_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_conversations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_last_activity_at'), ['last_activity_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_user_id'), ['user_id'], unique=False)

    op.create_table(
        'conversation_summaries',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('conversation_id', sa.Integer(), nullable=False),
        sa.Column('start_turn', sa.Integer(), nullable=False),
        sa.Column('end_turn', sa.Integer(), nullable=False),
        sa.Column('summary_text', sa.Text(), nullable=False),
        sa.Column('key_topics', sa.JSON(), nullable=False),
        sa.Column('important_entities', sa.JSON(), nullable=False),
        sa.Column('summary_method', sa.String(length=50), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversation_summaries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversation_summaries_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_summaries_id'), ['id'], unique=False)

    op.create_table(
        'conversation_turns',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('turn_id', sa.String(length=255), nullable=False),
        sa.Column('conversation_id', sa.Integer(), nullable=False),
        sa.Column('turn_number', sa.Integer(), nullable=False),
        sa.Column('user_message', sa.Text(), nullable=False),
        sa.Column('assistant_response', sa.Text(), nullable=False),
        sa.Column('processing_time_ms', sa.Float(), nullable=True),
        sa.Column('confidence_score', sa.Float(), nullable=True),
        sa.Column('error_occurred', sa.Boolean(), nullable=False),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('intent_result', sa.JSON(), nullable=True),
        sa.Column('agent_chain', sa.JSON(), nullable=False),
        sa.Column('intent_classification', sa.JSON(), nullable=True),
        sa.Column('entities_extracted', sa.JSON(), nullable=True),
        sa.Column('intent_confidence', sa.Numeric(5, 4), nullable=True),
        sa.Column('total_tokens_used', sa.Integer(), nullable=True),
        sa.Column('openai_usage_stats', sa.JSON(), nullable=True),
        sa.Column('openai_cost_usd', sa.Float(), nullable=True),
        sa.Column('intent', sa.JSON(), nullable=True),
        sa.Column('entities', sa.JSON(), nullable=True),
        sa.Column('prompt_tokens', sa.Integer(), nullable=True),
        sa.Column('completion_tokens', sa.Integer(), nullable=True),
        sa.Column('total_tokens', sa.Integer(), nullable=True),
        sa.Column('search_query_used', sa.Text(), nullable=True),
        sa.Column('search_results_count', sa.Integer(), nullable=False),
        sa.Column('search_execution_time_ms', sa.Float(), nullable=True),
        sa.Column('turn_metadata', sa.JSON(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversation_turns', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversation_turns_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_turns_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_turns_turn_id'), ['turn_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_conversation_turns_turn_number'), ['turn_number'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('conversation_turns', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_turns_turn_number'))
        batch_op.drop_index(batch_op.f('ix_conversation_turns_turn_id'))
        batch_op.drop_index(batch_op.f('ix_conversation_turns_id'))
        batch_op.drop_index(batch_op.f('ix_conversation_turns_conversation_id'))

    op.drop_table('conversation_turns')
    with op.batch_alter_table('conversation_summaries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_summaries_id'))
        batch_op.drop_index(batch_op.f('ix_conversation_summaries_conversation_id'))

    op.drop_table('conversation_summaries')
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversations_user_id'))
        batch_op.drop_index(batch_op.f('ix_conversations_status'))
        batch_op.drop_index(batch_op.f('ix_conversations_last_activity_at'))
        batch_op.drop_index(batch_op.f('ix_conversations_id'))
        batch_op.drop_index(batch_op.f('ix_conversations_conversation_id'))

    op.drop_table('conversations')
    # ### end Alembic commands ###
