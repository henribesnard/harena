# Configuration des Entités Harena v2.0 - Production
# Basée sur les champs réels de enrichment_service/models.py et search_service
version: "2.0.0"
description: "Configuration entités production alignée avec enrichment_service"
approach: "few_shot_learning"
last_updated: "2025-01-15"

metadata:
  source_validation: "enrichment_service.models.StructuredTransaction"
  target_interface: "search_service.models.request.SearchRequest"
  compatibility_verified: true

# ============================================================================
# CHAMPS RÉELS DISPONIBLES (Source: enrichment_service/models.py)
# ============================================================================
search_service_fields:
  description: "Champs réellement disponibles dans le système Harena"
  
  # Champs temporels
  temporal_fields:
    - "date"           # datetime ISO 8601 principal
    - "date_str"       # format YYYY-MM-DD
    - "month_year"     # format YYYY-MM pour agrégations
    - "weekday"        # jour de la semaine
    - "timestamp"      # timestamp Unix
    
  # Champs monétaires  
  monetary_fields:
    - "amount"         # montant signé (positif=crédit, négatif=débit)
    - "amount_abs"     # montant absolu (toujours positif) pour ranges
    - "currency_code"  # devise (défaut: "EUR")
    
  # Champs textuels
  text_fields:
    - "searchable_text"      # texte enrichi pour recherche libre
    - "primary_description"  # description principale
    - "merchant_name"        # nom du marchand (peut être null)
    - "category_name"        # nom de catégorie
    - "operation_type"       # type d'opération bancaire
    
  # Champs énumérés/filtrables
  enum_fields:
    - "transaction_type"     # "credit" | "debit"
    - "account_id"          # ID numérique du compte
    - "user_id"             # ID utilisateur (toujours requis)
    - "transaction_id"      # ID unique de transaction
    - "category_id"         # ID catégorie (peut être null)
    
  # Champs booléens
  boolean_fields:
    - "is_future"           # transaction future
    - "is_deleted"          # transaction supprimée
    - "balance_check_passed" # validation qualité (optionnel)
    
  # Champs de qualité/métadonnées
  quality_fields:
    - "quality_score"       # score de qualité (0.0-1.0)
    - "indexed_at"          # timestamp d'indexation
    - "version"             # version du format

# ============================================================================
# ENTITÉS TEMPORELLES - ALIGNÉES SYSTÈME RÉEL
# ============================================================================
temporal_entities:
  periode_temporelle:
    description: "Expressions temporelles → ranges sur champ 'date'"
    type: "temporal_range"
    target_field: "date"
    
    few_shot_examples:
      - input: "le mois dernier"
        output: {"date_range": "last_month"}
        explanation: "Période standard normalisée"

      - input: "ces 30 derniers jours"
        output: {"date_range": "last_30_days"}
        explanation: "Période relative standard"

      - input: "de mai"
        output: {"date_range": "2025-05"}
        explanation: "Mois avec année courante"

      - input: "en janvier 2025"
        output: {"date_range": "2025-01"}
        explanation: "Mois avec année spécifique"

      - input: "du 1er mai"
        output: {"date_range": "2025-05-01"}
        explanation: "Date spécifique avec année courante"

      - input: "du 5 mars"
        output: {"date_range": "2025-03-05"}
        explanation: "Date spécifique format ISO"

      - input: "du 14 au 15 mai"
        output: {"date_range": "2025-05-14_2025-05-15"}
        explanation: "Range de dates avec séparateur underscore"

      - input: "en décembre"
        output: {"date_range": "2025-12"}
        explanation: "Mois avec année courante"

      - input: "cette semaine"
        output: {"date_range": "this_week"}
        explanation: "Période relative standard"

      - input: "ce trimestre"
        output: {"date_range": "this_quarter"}
        explanation: "Période trimestrielle"

      - input: "aujourd'hui"
        output: {"date_range": "today"}
        explanation: "Jour actuel"

      - input: "demain"
        output: {"date_range": "tomorrow"}
        explanation: "Jour suivant"

      - input: "cette année"
        output: {"date_range": "this_year"}
        explanation: "Année courante"

      - input: "de l'année dernière"
        output: {"date_range": "last_year"}
        explanation: "Année précédente"

      - input: "du weekend"
        output: {"date_range": "weekend"}
        explanation: "Weekend courant"

      - input: "du 15 septembre"
        output: {"date_range": "2025-09-15"}
        explanation: "Date avec année courante implicite"

      - input: "du 1er au 15 octobre"
        output: {"date_range": "2025-10-01_2025-10-15"}
        explanation: "Range avec dates explicites"

      - input: "de 1995"
        output: {"date_range": "1995"}
        explanation: "Année spécifique complète"

      - input: "en 2030"
        output: {"date_range": "2030"}
        explanation: "Année future"

    extraction_guidance:
      - "TOUJOURS utiliser 'date_range' au lieu de 'date', 'month', 'year'"
      - "Format standard: YYYY-MM-DD pour dates, YYYY-MM pour mois, YYYY pour années"
      - "Ranges avec underscore: 2025-05-14_2025-05-15"
      - "Périodes relatives: this_month, last_week, today, etc."
      - "Année courante implicite si non spécifiée (2025)"
      - "Distinguer années (1995, 2030) des montants par contexte"

  granularite_temporelle:
    description: "Granularité pour agrégations date_histogram"
    type: "aggregation_interval"
    target_aggregation: "date_histogram.calendar_interval"
    
    few_shot_examples:
      - input: "par mois"
        output: "1M"
      - input: "quotidien"
        output: "1d"
      - input: "par semaine"
        output: "1w"
      - input: "trimestriel"
        output: "quarter"

# ============================================================================
# ENTITÉS MONÉTAIRES - CHAMPS RÉELS amount/amount_abs
# ============================================================================
monetary_entities:
  montant:
    description: "Filtres monétaires sur amount_abs (toujours positif)"
    type: "monetary_range" 
    target_fields: ["amount_abs", "amount"]
    
    few_shot_examples:
      - input: "plus de 100 euros"
        output: {"amount_abs": {"gte": 100.0}}
        explanation: "Utiliser amount_abs pour montants > 0"
        
      - input: "entre 50 et 200€"
        output: {"amount_abs": {"gte": 50.0, "lte": 200.0}}
        explanation: "Range sur montant absolu"
        
      - input: "moins de 25 euros"
        output: {"amount_abs": {"lte": 25.0}}
        explanation: "Filtre maximum"
        
      - input: "mes plus grosses dépenses"
        output: {"sort": [{"amount_abs": {"order": "desc"}}]}
        explanation: "Tri décroissant par montant"
        
      - input: "montant exact de 75€"
        output: {"amount_abs": 75.0}
        explanation: "Valeur exacte (rare en pratique)"

    extraction_guidance:
      - "amount_abs pour tous les filtres de montant (toujours positif)"
      - "amount pour tri si le signe importe (crédit/débit)"
      - "Conversion automatique des devises vers EUR par défaut"
      - "Support décimaux (ex: 25.50)"

# ============================================================================
# ENTITÉS TEXTUELLES - CHAMPS RÉELS
# ============================================================================
textual_entities:
  merchant_search:
    description: "Recherche de marchands via searchable_text ou merchant_name"
    type: "text_search"
    target_fields: ["merchant_name", "searchable_text"]
    
    few_shot_examples:
      - input: "mes achats chez Amazon"
        output: {"query": "Amazon"}
        explanation: "Recherche textuelle libre sur searchable_text"
        
      - input: "toutes mes transactions Carrefour"
        output: {"merchant_name": "Carrefour"}
        explanation: "Filtre exact si nom complet"
        
      - input: "mes restaurants préférés"
        output: {"query": "restaurant"}
        explanation: "Recherche textuelle large"

    extraction_guidance:
      - "Préférer 'query' pour recherche textuelle flexible"
      - "Utiliser 'merchant_name' filtre exact si nom précis fourni" 
      - "Le champ merchant_name peut être null (pas tous les enrichissements)"

  category_search:
    description: "Recherche par catégorie via query textuelle (priorité)"
    type: "category_filter"
    target_fields: ["query", "category_name"]

    few_shot_examples:
      - input: "mes dépenses restaurant"
        output: {"query": "restaurant"}
        explanation: "Recherche textuelle prioritaire"

      - input: "frais de transport"
        output: {"query": "transport taxi uber carburant parking"}
        explanation: "Recherche avec mots-clés multiples"

      - input: "mes achats alimentaires"
        output: {"query": "alimentaire supermarche groceries courses nourriture"}
        explanation: "Recherche étendue avec synonymes"

      - input: "mes dépenses santé"
        output: {"query": "sante medecin dentiste pharmacie medical"}
        explanation: "Recherche santé avec termes médicaux"

      - input: "mes sorties loisirs"
        output: {"query": "loisirs cinema concert sport voyage hobby"}
        explanation: "Recherche loisirs avec activités"

      - input: "mes factures d'énergie"
        output: {"query": "energie electricite gaz edf engie utilities"}
        explanation: "Recherche énergie avec fournisseurs"

      - input: "mes frais bancaires"
        output: {"query": "bancaire banque frais commission agios"}
        explanation: "Recherche bancaire avec types de frais"

      - input: "mes achats vêtements"
        output: {"query": "vetements clothing mode fashion magasin"}
        explanation: "Recherche vêtements avec termes mode"

      - input: "mes dépenses électronique"
        output: {"query": "electronique electronics informatique telephone ordinateur"}
        explanation: "Recherche électronique avec appareils"

      - input: "mes achats en ligne"
        output: {"query": "en ligne online internet ecommerce shopping"}
        explanation: "Recherche commerce électronique"

      - input: "mes abonnements"
        output: {"query": "abonnement subscription mensuel recurrent"}
        explanation: "Recherche abonnements avec périodicité"

      - input: "mes dépenses spatial"
        output: {"query": "spatial espace nasa spacex fusee satellite"}
        explanation: "Recherche spatiale avec termes spécialisés"

      - input: "mes achats en Bitcoin"
        output: {"query": "bitcoin crypto cryptocurrency ethereum binance"}
        explanation: "Recherche crypto avec monnaies et plateformes"

    extraction_guidance:
      - "TOUJOURS privilégier 'query' pour les catégories"
      - "Inclure plusieurs mots-clés synonymes dans query"
      - "Utiliser 'query' au lieu de 'categories' ou 'category_name'"
      - "Combiner termes français et anglais dans query"

  description_search:
    description: "Recherche dans les descriptions"
    type: "text_search"
    target_fields: ["primary_description", "searchable_text"]
    
    few_shot_examples:
      - input: "paiement carte bancaire"
        output: {"query": "paiement carte bancaire"}
        explanation: "Recherche libre dans searchable_text"
        
      - input: "virement SEPA"
        output: {"primary_description": "virement SEPA"}
        explanation: "Recherche ciblée dans description principale"

# ============================================================================
# ENTITÉS MÉTIER - ÉNUMÉRATIONS RÉELLES
# ============================================================================
business_entities:
  transaction_type:
    description: "Type de transaction (valeurs exactes du système)"
    type: "enum_filter"
    target_field: "transaction_type"
    allowed_values: ["credit", "debit"]

    few_shot_examples:
      - input: "mes dépenses"
        output: {"transaction_type": "debit"}
        explanation: "Débit = argent qui sort"

      - input: "mes achats"
        output: {"transaction_type": "debit"}
        explanation: "Achats = dépenses = débit"

      - input: "mes revenus"
        output: {"transaction_type": "credit"}
        explanation: "Crédit = argent qui rentre"

      - input: "mes virements reçus"
        output: {"transaction_type": "credit"}

      - input: "mes opérations"
        output: {}
        explanation: "Opérations = tous types de transactions"

    extraction_guidance:
      - "Débit: achats, dépenses, retraits, virements sortants"
      - "Crédit: salaires, virements entrants, remboursements"

  operation_type:
    description: "Type d'opération bancaire (valeurs réelles en base)"
    type: "enum_filter"
    target_field: "operation_type"
    allowed_values: ["card", "withdrawal", "deferred_debit_card", "unknown", "direct_debit", "transfer"]

    few_shot_examples:
      - input: "mes paiements par carte"
        output: {"operation_type": "card"}
        explanation: "Paiements carte standard"

      - input: "mes retraits espèces"
        output: {"operation_type": "withdrawal"}
        explanation: "Retraits d'argent = withdrawal (PAS cash)"

      - input: "mes cartes à débit différé"
        output: {"operation_type": "deferred_debit_card"}
        explanation: "Débit différé = deferred_debit_card (PAS card_payment)"

      - input: "mes prélèvements automatiques"
        output: {"operation_type": "direct_debit"}
        explanation: "Prélèvements directs"

      - input: "mes virements"
        output: {"operation_type": "transfer"}
        explanation: "Virements entrants et sortants"

      - input: "mes opérations non identifiées"
        output: {"operation_type": "unknown"}
        explanation: "Non identifiées = unknown (PAS unidentified)"

      - input: "mes chèques"
        output: {"operation_type": "unknown"}
        explanation: "Chèques = unknown (pas de type spécifique)"

      - input: "mes abonnements récurrents"
        output: {"operation_type": "direct_debit"}
        explanation: "Abonnements = prélèvements"

      - input: "mes paiements contactless"
        output: {"operation_type": "card"}
        explanation: "Sans contact = carte"

      - input: "mes virements SEPA"
        output: {"operation_type": "transfer"}
        explanation: "SEPA = virement"

    extraction_guidance:
      - "SEULEMENT 6 VALEURS AUTORISÉES: card, withdrawal, deferred_debit_card, unknown, direct_debit, transfer"
      - "withdrawal: retraits espèces (PAS cash, PAS retrait_especes)"
      - "deferred_debit_card: débit différé (PAS card_payment, PAS carte_credit)"
      - "unknown: non identifiées (PAS unidentified, PAS inconnu)"
      - "card: paiements carte standard (PAS carte_bancaire)"
      - "direct_debit: prélèvements auto (PAS prelevement)"
      - "transfer: tous virements (PAS virement, PAS virement_sepa)"
      - "NE PAS INVENTER de nouvelles valeurs - utiliser seulement les 6 officielles"

  account_reference:
    description: "Référence à un compte spécifique"
    type: "account_filter"
    target_field: "account_id"

    few_shot_examples:
      - input: "compte 12345"
        output: {"account_id": 12345}
        explanation: "Filtre par ID numérique exact"

      - input: "mon compte principal"
        output: {}
        explanation: "Pas d'info suffisante → pas de filtre (laisser tous comptes)"

    extraction_guidance:
      - "Utiliser account_id uniquement si ID numérique fourni"
      - "Pas de mapping type→ID (info non disponible dans ce contexte)"

# ============================================================================
# ENTITÉS ANALYTIQUES - AGRÉGATIONS ELASTICSEARCH
# ============================================================================
analytical_entities:
  aggregation_request:
    description: "Demandes d'analyses → agrégations Elasticsearch"
    type: "aggregation_intent"
    
    few_shot_examples:
      - input: "répartition par catégorie"
        output: {
          "aggregations": {
            "categories": {
              "terms": {"field": "category_name.keyword", "size": 20},
              "aggs": {"total_spent": {"sum": {"field": "amount_abs"}}}
            }
          }
        }
        explanation: "Terms aggregation avec somme"
        
      - input: "évolution mensuelle"
        output: {
          "aggregations": {
            "monthly_trend": {
              "date_histogram": {
                "field": "date",
                "calendar_interval": "1M"
              },
              "aggs": {"monthly_total": {"sum": {"field": "amount_abs"}}}
            }
          }
        }
        explanation: "Histogram temporel"
        
      - input: "top 10 des marchands"
        output: {
          "aggregations": {
            "top_merchants": {
              "terms": {
                "field": "merchant_name.keyword", 
                "size": 10,
                "order": {"total_spending": "desc"}
              },
              "aggs": {"total_spending": {"sum": {"field": "amount_abs"}}}
            }
          }
        }
        explanation: "Top N avec tri par montant"

    extraction_guidance:
      - "Utiliser .keyword pour agrégations sur champs textuels"
      - "date pour histogrammes temporels" 
      - "amount_abs pour sommes (toujours positif)"
      - "Combiner agrégations pour analyses complexes"

# ============================================================================
# ENTITÉS CONTEXTUELLES
# ============================================================================
contextual_entities:
  reference_contextuelle:
    description: "Références au contexte conversationnel"
    type: "context_reference"
    
    few_shot_examples:
      - input: "et pour avril ?"
        context_modification: {"date": {"gte": "2025-04-01T00:00:00Z", "lte": "2025-04-30T23:59:59Z"}}
        explanation: "Modifier la période en gardant le reste"
        
      - input: "pareil mais Amazon"
        context_modification: {"merchant_name": "Amazon"}
        explanation: "Modifier le marchand"
        
      - input: "la même chose en 2023"
        context_modification: {"date": {"gte": "2023-01-01T00:00:00Z", "lte": "2023-12-31T23:59:59Z"}}

# ============================================================================
# CONFIGURATION VALIDATION ET PERFORMANCE
# ============================================================================
validation_rules:
  required_fields: ["user_id"]  # Toujours obligatoire pour sécurité
  
  field_validation:
    user_id: {"type": "integer", "minimum": 1}
    amount_abs: {"type": "number", "minimum": 0}
    date: {"type": "string", "format": "datetime"}
    transaction_type: {"enum": ["credit", "debit"]}
    
performance_settings:
  cache_entity_patterns: false
  adaptive_field_selection: true
  field_popularity_tracking: true

global_settings:
  extraction_method: "llm_autonomous_with_validation"
  fallback_to_text_search: true
  strict_field_validation: false  # Permissif pour nouveaux cas
  learning_enabled: true