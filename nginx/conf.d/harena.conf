# ============================================
# HARENA - NGINX REVERSE PROXY CONFIGURATION
# ============================================
# Gestion du routage pour tous les services backend + frontend
# CORS résolu via même origine
# ============================================

server {
    listen 80;
    server_name _;

    # Increase buffer sizes for larger requests
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # ============================================
    # HEALTH CHECK
    # ============================================
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # ============================================
    # BACKEND API ROUTES
    # ============================================

    # User Service - Authentication & User Management
    location ~ ^/api/v1/(users|auth|login|register|profile) {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://user_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers (géré par le même domaine, mais au cas où)
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Search Service - Search & Indexing
    location ~ ^/api/v1/(search|index) {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://search_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Metric Service - Analytics & Metrics
    location ~ ^/api/v1/(metrics|analytics|dashboard|statistics) {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://metric_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Budget Profiling Service - Budget Analysis
    location ~ ^/api/v1/(budget|profiling|recommendations|spending) {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://budget_profiling_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Sync Service - Bridge API Synchronization
    location ~ ^/api/v1/sync {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://sync_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Enrichment Service - Transaction Enrichment
    location ~ ^/api/v1/(enrichment|enrich) {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://enrichment_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Conversation Service V3 - AI Chat (LangChain Agents)
    location ~ ^/api/v3/ {
        limit_req zone=api_limit burst=10 nodelay;

        # Augmenter les timeouts pour les requêtes LLM (peuvent être longues)
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        proxy_pass http://conversation_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Support pour le streaming SSE (Server-Sent Events)
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding on;

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # ============================================
    # FRONTEND - REACT/VITE APPLICATION
    # ============================================
    location / {
        limit_req zone=general_limit burst=50 nodelay;

        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Support pour le Hot Module Replacement (HMR) de Vite
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Cache pour les assets statiques
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # ============================================
    # MONITORING TOOLS
    # ============================================

    # Uptime Kuma - Status Monitoring (commented out - not deployed yet)
    # location /uptime/ {
    #     proxy_pass http://uptime-kuma:3001/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #
    #     # WebSocket support (requis pour Uptime Kuma)
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #
    #     # Timeouts
    #     proxy_connect_timeout 60s;
    #     proxy_send_timeout 60s;
    #     proxy_read_timeout 60s;
    # }

    # ============================================
    # ERROR PAGES
    # ============================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# ============================================
# SSL/HTTPS CONFIGURATION (à activer après Let's Encrypt)
# ============================================
# Décommentez cette section après avoir obtenu les certificats SSL

# server {
#     listen 443 ssl http2;
#     server_name votre-domaine.com;
#
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS (HTTP Strict Transport Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # Copiez toutes les locations du serveur HTTP ci-dessus
#     # ...
# }
#
# # Redirection HTTP → HTTPS
# server {
#     listen 80;
#     server_name votre-domaine.com;
#     return 301 https://$server_name$request_uri;
# }
